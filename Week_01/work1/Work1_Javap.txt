Classfile /Users/kuaikan/work/JAVA-000/Week_01/Work1.class
  Last modified 2020-10-18; size 2372 bytes
  MD5 checksum a29b90ef9d58d3b3a4d6fe9511e736bd
  Compiled from "Work1.java"
public class Work1
  minor version: 0
  major version: 52
  flags: ACC_PUBLIC, ACC_SUPER
Constant pool:
    #1 = Methodref          #28.#83       // java/lang/Object."<init>":()V
    #2 = Fieldref           #7.#84        // Work1.a:I
    #3 = Fieldref           #7.#85        // Work1.c:I
    #4 = Fieldref           #7.#86        // Work1.e:I
    #5 = Fieldref           #7.#87        // Work1.g:I
    #6 = Fieldref           #88.#89       // java/lang/System.out:Ljava/io/PrintStream;
    #7 = Class              #90           // Work1
    #8 = Methodref          #91.#92       // java/io/PrintStream.println:(I)V
    #9 = Methodref          #7.#83        // Work1."<init>":()V
   #10 = Methodref          #28.#93       // java/lang/Object.getClass:()Ljava/lang/Class;
   #11 = Fieldref           #7.#94        // Work1.h:I
   #12 = String             #95           // true
   #13 = Methodref          #91.#96       // java/io/PrintStream.println:(Ljava/lang/String;)V
   #14 = String             #97           // false
   #15 = Class              #98           // java/io/File
   #16 = String             #99           //
   #17 = Methodref          #15.#100      // java/io/File."<init>":(Ljava/lang/String;)V
   #18 = Class              #101          // java/io/FileInputStream
   #19 = Methodref          #18.#102      // java/io/FileInputStream."<init>":(Ljava/io/File;)V
   #20 = Methodref          #103.#104     // java/io/InputStream.read:()I
   #21 = Methodref          #103.#105     // java/io/InputStream.close:()V
   #22 = Class              #106          // java/lang/Throwable
   #23 = Methodref          #22.#107      // java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
   #24 = String             #108          // path
   #25 = Methodref          #109.#110     // java/lang/Class.getDeclaredField:(Ljava/lang/String;)Ljava/lang/reflect/Field;
   #26 = Methodref          #111.#112     // java/lang/reflect/Field.getName:()Ljava/lang/String;
   #27 = Fieldref           #7.#113       // Work1.f:I
   #28 = Class              #114          // java/lang/Object
   #29 = Utf8               a
   #30 = Utf8               I
   #31 = Utf8               B
   #32 = Utf8               ConstantValue
   #33 = Integer            2
   #34 = Utf8               c
   #35 = Utf8               D
   #36 = Integer            4
   #37 = Utf8               e
   #38 = Integer            5
   #39 = Utf8               f
   #40 = Utf8               g
   #41 = Utf8               h
   #42 = Utf8               <init>
   #43 = Utf8               ()V
   #44 = Utf8               Code
   #45 = Utf8               LineNumberTable
   #46 = Utf8               LocalVariableTable
   #47 = Utf8               this
   #48 = Utf8               LWork1;
   #49 = Utf8               main
   #50 = Utf8               ([Ljava/lang/String;)V
   #51 = Utf8               i
   #52 = Utf8               in
   #53 = Utf8               Ljava/io/InputStream;
   #54 = Utf8               args
   #55 = Utf8               [Ljava/lang/String;
   #56 = Utf8               work1
   #57 = Utf8               r1
   #58 = Utf8               r2
   #59 = Utf8               r3
   #60 = Utf8               r4
   #61 = Utf8               r5
   #62 = Utf8               r6
   #63 = Utf8               r7
   #64 = Utf8               array
   #65 = Utf8               [I
   #66 = Utf8               file
   #67 = Utf8               Ljava/io/File;
   #68 = Utf8               field
   #69 = Utf8               Ljava/lang/reflect/Field;
   #70 = Utf8               StackMapTable
   #71 = Class              #55           // "[Ljava/lang/String;"
   #72 = Class              #90           // Work1
   #73 = Class              #65           // "[I"
   #74 = Class              #98           // java/io/File
   #75 = Class              #115          // java/io/InputStream
   #76 = Class              #106          // java/lang/Throwable
   #77 = Utf8               Exceptions
   #78 = Class              #116          // java/io/IOException
   #79 = Class              #117          // java/lang/NoSuchFieldException
   #80 = Utf8               <clinit>
   #81 = Utf8               SourceFile
   #82 = Utf8               Work1.java
   #83 = NameAndType        #42:#43       // "<init>":()V
   #84 = NameAndType        #29:#30       // a:I
   #85 = NameAndType        #34:#30       // c:I
   #86 = NameAndType        #37:#30       // e:I
   #87 = NameAndType        #40:#30       // g:I
   #88 = Class              #118          // java/lang/System
   #89 = NameAndType        #119:#120     // out:Ljava/io/PrintStream;
   #90 = Utf8               Work1
   #91 = Class              #121          // java/io/PrintStream
   #92 = NameAndType        #122:#123     // println:(I)V
   #93 = NameAndType        #124:#125     // getClass:()Ljava/lang/Class;
   #94 = NameAndType        #41:#30       // h:I
   #95 = Utf8               true
   #96 = NameAndType        #122:#126     // println:(Ljava/lang/String;)V
   #97 = Utf8               false
   #98 = Utf8               java/io/File
   #99 = Utf8
  #100 = NameAndType        #42:#126      // "<init>":(Ljava/lang/String;)V
  #101 = Utf8               java/io/FileInputStream
  #102 = NameAndType        #42:#127      // "<init>":(Ljava/io/File;)V
  #103 = Class              #115          // java/io/InputStream
  #104 = NameAndType        #128:#129     // read:()I
  #105 = NameAndType        #130:#43      // close:()V
  #106 = Utf8               java/lang/Throwable
  #107 = NameAndType        #131:#132     // addSuppressed:(Ljava/lang/Throwable;)V
  #108 = Utf8               path
  #109 = Class              #133          // java/lang/Class
  #110 = NameAndType        #134:#135     // getDeclaredField:(Ljava/lang/String;)Ljava/lang/reflect/Field;
  #111 = Class              #136          // java/lang/reflect/Field
  #112 = NameAndType        #137:#138     // getName:()Ljava/lang/String;
  #113 = NameAndType        #39:#30       // f:I
  #114 = Utf8               java/lang/Object
  #115 = Utf8               java/io/InputStream
  #116 = Utf8               java/io/IOException
  #117 = Utf8               java/lang/NoSuchFieldException
  #118 = Utf8               java/lang/System
  #119 = Utf8               out
  #120 = Utf8               Ljava/io/PrintStream;
  #121 = Utf8               java/io/PrintStream
  #122 = Utf8               println
  #123 = Utf8               (I)V
  #124 = Utf8               getClass
  #125 = Utf8               ()Ljava/lang/Class;
  #126 = Utf8               (Ljava/lang/String;)V
  #127 = Utf8               (Ljava/io/File;)V
  #128 = Utf8               read
  #129 = Utf8               ()I
  #130 = Utf8               close
  #131 = Utf8               addSuppressed
  #132 = Utf8               (Ljava/lang/Throwable;)V
  #133 = Utf8               java/lang/Class
  #134 = Utf8               getDeclaredField
  #135 = Utf8               (Ljava/lang/String;)Ljava/lang/reflect/Field;
  #136 = Utf8               java/lang/reflect/Field
  #137 = Utf8               getName
  #138 = Utf8               ()Ljava/lang/String;
{
  private int a;
    descriptor: I
    flags: ACC_PRIVATE

  private static final int B;
    descriptor: I
    flags: ACC_PRIVATE, ACC_STATIC, ACC_FINAL
    ConstantValue: int 2

  public int c;
    descriptor: I
    flags: ACC_PUBLIC

  public static final int D;
    descriptor: I
    flags: ACC_PUBLIC, ACC_STATIC, ACC_FINAL
    ConstantValue: int 4

  public final int e;
    descriptor: I
    flags: ACC_PUBLIC, ACC_FINAL
    ConstantValue: int 5

  public static final int f;
    descriptor: I
    flags: ACC_PUBLIC, ACC_STATIC, ACC_FINAL

  public final int g;
    descriptor: I
    flags: ACC_PUBLIC, ACC_FINAL

  private static int h;
    descriptor: I
    flags: ACC_PRIVATE, ACC_STATIC

  public Work1();
    descriptor: ()V
    flags: ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: invokespecial #1                  // Method java/lang/Object."<init>":()V
         4: aload_0
         5: iconst_1
         6: putfield      #2                  // Field a:I
         9: aload_0
        10: iconst_3
        11: putfield      #3                  // Field c:I
        14: aload_0
        15: iconst_5
        16: putfield      #4                  // Field e:I
        19: aload_0
        20: bipush        7
        22: putfield      #5                  // Field g:I
        25: return
      LineNumberTable:
        line 12: 0
        line 14: 4
        line 16: 9
        line 18: 14
        line 30: 19
        line 31: 25
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      26     0  this   LWork1;

  public static void main(java.lang.String[]) throws java.io.IOException, java.lang.NoSuchFieldException;
    descriptor: ([Ljava/lang/String;)V
    flags: ACC_PUBLIC, ACC_STATIC
    Code:
      stack=3, locals=16, args_size=1
         0: getstatic     #6                  // Field java/lang/System.out:Ljava/io/PrintStream;      该代码可以看出，System.out.println()用的是System.out类的静态成员变量
         3: bipush        6                   //                                                       用的是常量6，这里看出，如果一个类的变量使用final修饰，则可以在编译器直接计算出结果
         5: invokevirtual #8                  // Method java/io/PrintStream.println:(I)V               调用的是println方法
         8: new           #7                  // class Work1                                           创建对象
        11: dup
        12: invokespecial #9                  // Method "<init>":()V
        15: astore_1                          //                                                       将创建好的对象放到槽位1
        16: aload_1
        17: invokevirtual #10                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
        20: pop
        21: iconst_5
        22: iconst_4
        23: imul                              //                                                       相乘
        24: istore_2
        25: aload_1
        26: getfield      #2                  // Field a:I
        29: iconst_4
        30: idiv                              //                                                       相除
        31: istore_3
        32: aload_1
        33: getfield      #3                  // Field c:I
        36: aload_1
        37: invokevirtual #10                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
        40: pop
        41: iconst_5
        42: isub                              //                                                       相减
        43: istore        4
        45: aload_1
        46: invokevirtual #10                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
        49: pop
        50: iconst_5
        51: aload_1
        52: getfield      #5                  // Field g:I
        55: iadd                              //                                                       相加
        56: istore        4
        58: getstatic     #11                 // Field h:I                                             获取实例变量是 getfield，获取静态变量是 getstatic
        61: dup
        62: iconst_1
        63: iadd                              //                                                       这里看出++实际上就是 + 1
        64: putstatic     #11                 // Field h:I
        67: istore        5
        69: getstatic     #11                 // Field h:I
        72: iconst_1
        73: iadd
        74: dup
        75: putstatic     #11                 // Field h:I                                             +=1 就是 + 1 在赋值给变量
        78: istore        6
        80: bipush        7
        82: istore        7
        84: iload         7
        86: iconst_1
        87: iadd
        88: istore        8
        90: getstatic     #6                  // Field java/lang/System.out:Ljava/io/PrintStream;
        93: iload         7
        95: invokevirtual #8                  // Method java/io/PrintStream.println:(I)V
        98: iload         5
       100: iconst_3
       101: if_icmpne     115                 //                                                        判断，不等跳到115行
       104: getstatic     #6                  // Field java/lang/System.out:Ljava/io/PrintStream;
       107: ldc           #12                 // String true
       109: invokevirtual #13                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
       112: goto          123
       115: getstatic     #6                  // Field java/lang/System.out:Ljava/io/PrintStream;
       118: ldc           #14                 // String false
       120: invokevirtual #13                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
       123: iload_2
       124: newarray       int
       126: astore        9
       128: iconst_0
       129: istore        10
       131: iload         10
       133: aload         9
       135: arraylength
       136: if_icmpge     156
       139: getstatic     #6                  // Field java/lang/System.out:Ljava/io/PrintStream;
       142: aload         9
       144: iload         10
       146: iaload
       147: invokevirtual #8                  // Method java/io/PrintStream.println:(I)V
       150: iinc          10, 1
       153: goto          131
       156: aload         9
       158: astore        10
       160: aload         10
       162: arraylength
       163: istore        11
       165: iconst_0
       166: istore        12
       168: iload         12
       170: iload         11
       172: if_icmpge     196
       175: aload         10
       177: iload         12
       179: iaload
       180: istore        13
       182: getstatic     #6                  // Field java/lang/System.out:Ljava/io/PrintStream;
       185: iload         13
       187: invokevirtual #8                  // Method java/io/PrintStream.println:(I)V
       190: iinc          12, 1
       193: goto          168                 //                                                          for语法糖和普通for循环没什么区别
       196: new           #15                 // class java/io/File
       199: dup
       200: ldc           #16                 // String
       202: invokespecial #17                 // Method java/io/File."<init>":(Ljava/lang/String;)V
       205: astore        10
       207: new           #18                 // class java/io/FileInputStream
       210: dup
       211: aload         10
       213: invokespecial #19                 // Method java/io/FileInputStream."<init>":(Ljava/io/File;)V
       216: astore        11
       218: aconst_null
       219: astore        12
       221: getstatic     #6                  // Field java/lang/System.out:Ljava/io/PrintStream;
       224: aload         11
       226: invokevirtual #20                 // Method java/io/InputStream.read:()I
       229: invokevirtual #8                  // Method java/io/PrintStream.println:(I)V
       232: aload         11
       234: ifnull        319
       237: aload         12
       239: ifnull        262
       242: aload         11
       244: invokevirtual #21                 // Method java/io/InputStream.close:()V                             try语法糖 自动调用想应的close方法
       247: goto          319
       250: astore        13
       252: aload         12
       254: aload         13
       256: invokevirtual #23                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V  而且自动加了抛出异常的逻辑
       259: goto          319
       262: aload         11
       264: invokevirtual #21                 // Method java/io/InputStream.close:()V
       267: goto          319
       270: astore        13
       272: aload         13
       274: astore        12
       276: aload         13
       278: athrow
       279: astore        14
       281: aload         11
       283: ifnull        316
       286: aload         12
       288: ifnull        311
       291: aload         11
       293: invokevirtual #21                 // Method java/io/InputStream.close:()V
       296: goto          316
       299: astore        15
       301: aload         12
       303: aload         15
       305: invokevirtual #23                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
       308: goto          316
       311: aload         11
       313: invokevirtual #21                 // Method java/io/InputStream.close:()V
       316: aload         14
       318: athrow
       319: ldc           #15                 // class java/io/File
       321: ldc           #24                 // String path
       323: invokevirtual #25                 // Method java/lang/Class.getDeclaredField:(Ljava/lang/String;)Ljava/lang/reflect/Field;
       326: astore        11
       328: getstatic     #6                  // Field java/lang/System.out:Ljava/io/PrintStream;
       331: aload         11
       333: invokevirtual #26                 // Method java/lang/reflect/Field.getName:()Ljava/lang/String;
       336: invokevirtual #13                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
       339: return
      Exception table:
         from    to  target type
           242   247   250   Class java/lang/Throwable
           221   232   270   Class java/lang/Throwable
           221   232   279   any
           291   296   299   Class java/lang/Throwable
           270   281   279   any
      LineNumberTable:
        line 34: 0
        line 35: 8
        line 36: 16
        line 37: 25
        line 38: 32
        line 39: 45
        line 40: 58
        line 41: 69
        line 42: 80
        line 43: 84
        line 44: 90
        line 45: 98
        line 46: 104
        line 48: 115
        line 50: 123
        line 51: 128
        line 52: 139
        line 51: 150
        line 54: 156
        line 55: 182
        line 54: 190
        line 57: 196
        line 58: 207
        line 59: 221
        line 60: 232
        line 58: 270
        line 60: 279
        line 61: 319
        line 62: 328
        line 63: 339
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
          131      25    10     i   I
          182       8    13     i   I
          218     101    11    in   Ljava/io/InputStream;
            0     340     0  args   [Ljava/lang/String;
           16     324     1 work1   LWork1;
           25     315     2    r1   I
           32     308     3    r2   I
           45     295     4    r3   I
           69     271     5    r4   I
           80     260     6    r5   I
           84     256     7    r6   I
           90     250     8    r7   I
          128     212     9 array   [I
          207     133    10  file   Ljava/io/File;
          328      12    11 field   Ljava/lang/reflect/Field;
      StackMapTable: number_of_entries = 14
        frame_type = 255 /* full_frame */
          offset_delta = 115
          locals = [ class "[Ljava/lang/String;", class Work1, int, int, int, int, int, int, int ]
          stack = []
        frame_type = 7 /* same */
        frame_type = 253 /* append */
          offset_delta = 7
          locals = [ class "[I", int ]
        frame_type = 250 /* chop */
          offset_delta = 24
        frame_type = 254 /* append */
          offset_delta = 11
          locals = [ class "[I", int, int ]
        frame_type = 248 /* chop */
          offset_delta = 27
        frame_type = 255 /* full_frame */
          offset_delta = 53
          locals = [ class "[Ljava/lang/String;", class Work1, int, int, int, int, int, int, int, class "[I", class java/io/File, class java/io/InputStream, class java/lang/Throwable ]
          stack = [ class java/lang/Throwable ]
        frame_type = 11 /* same */
        frame_type = 71 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
        frame_type = 72 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
        frame_type = 255 /* full_frame */
          offset_delta = 19
          locals = [ class "[Ljava/lang/String;", class Work1, int, int, int, int, int, int, int, class "[I", class java/io/File, class java/io/InputStream, class java/lang/Throwable, top, class java/lang/Throwable ]
          stack = [ class java/lang/Throwable ]
        frame_type = 11 /* same */
        frame_type = 4 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 2
          locals = [ class "[Ljava/lang/String;", class Work1, int, int, int, int, int, int, int, class "[I", class java/io/File ]
          stack = []
    Exceptions:
      throws java.io.IOException, java.lang.NoSuchFieldException

  static {};
    descriptor: ()V
    flags: ACC_STATIC
    Code:
      stack=1, locals=0, args_size=0
         0: bipush        6
         2: putstatic     #27                 // Field f:I
         5: return
      LineNumberTable:
        line 26: 0
        line 27: 5
}
SourceFile: "Work1.java"
